import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:shared_preferences/shared_preferences.dart';

part 'in_singl_cubit.freezed.dart';
part 'in_singl_state.dart';

class InSinglCubit extends Cubit<InSinglState> {
  InSinglCubit() : super(const InSinglState.initial());

  singlin(String email, String password) async {
    try {
      await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: email,
        password: password,
      );
      final prefs = await SharedPreferences.getInstance();
      prefs.setBool('user', true);
      prefs.setString('email', email);
      prefs.setString('pass', password);
      emit(const InSinglState.success());
    } on FirebaseAuthException catch (e) {
      /// –ê–¥–∏–ª–µ—Ç –ë–∞–π–∫–µ –º–æ–≥—É–ª –∂–∞–∫—Ç—ã chat gbt –∫—ã–ª–¥—ã üëá////////////////
      if (e.code == 'user-not-found') {
        emit(const InSinglState.error(
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —ç—Ç–æ–≥–æ –∞–¥—Ä–µ—Å–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω'));
      } else if (e.code == 'wrong-password') {
        emit(const InSinglState.error(
            '–î–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.'));
      } else {
        emit(InSinglState.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${e.message}'));
      }
      ////////////////
    }
  }
}
